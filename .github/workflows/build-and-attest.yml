name: Build and Attest Container

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write
  id-token: write  # Required for Sigstore signing

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image with Witness
        uses: testifysec/witness-run-action@v0.3.0
        with:
          step: docker-build
          command: docker buildx build --push --platform linux/amd64 --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --metadata-file docker-metadata.json --provenance=true --sbom=true --cache-from type=gha --cache-to type=gha,mode=max .
          attestations: docker slsa git github secretscan
          attestor-slsa-export: true
          enable-sigstore: true
          enable-archivista: true

      - name: Display attestation metadata
        id: attestation
        run: |
          echo "## Attestation Metadata" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Parse docker metadata
          if [ -f docker-metadata.json ]; then
            echo "### 📦 Docker Build Output" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            jq '{"image": .["image.name"], "digest": .["containerimage.digest"], "size": .["containerimage.descriptor"].size}' docker-metadata.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract key metadata for easy reference
            IMAGE_DIGEST=$(jq -r '.["containerimage.digest"]' docker-metadata.json)
            echo "**Image Digest:** \`$IMAGE_DIGEST\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          
          # SLSA metadata preview
          if [ -f slsa-predicate.json ]; then
            echo "### 🔐 SLSA Provenance Preview" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            jq '{buildType: .buildDefinition.buildType, builder: .runDetails.builder.id}' slsa-predicate.json >> $GITHUB_STEP_SUMMARY || echo "SLSA predicate will be generated"
            echo '```' >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Generate attestation summary and Archivista queries
        run: |
          echo "## Build Attestation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Container image built and pushed to GHCR" >> $GITHUB_STEP_SUMMARY
          echo "✅ Provenance captured with Witness" >> $GITHUB_STEP_SUMMARY
          echo "✅ Signed with Sigstore" >> $GITHUB_STEP_SUMMARY
          echo "✅ Attestation uploaded to Archivista" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 📋 Attestations Captured" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following attestations were generated:" >> $GITHUB_STEP_SUMMARY
          echo "- **Git**: Repository state and commit information" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub**: GitHub Actions context (workflow, runner, OIDC token)" >> $GITHUB_STEP_SUMMARY
          echo "- **Command Run**: Exact build command executed" >> $GITHUB_STEP_SUMMARY
          echo "- **Materials**: Input files used in the build" >> $GITHUB_STEP_SUMMARY
          echo "- **Products**: Output files created (docker-metadata.json)" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker**: Container image digest and build materials" >> $GITHUB_STEP_SUMMARY
          echo "- **SLSA**: Complete SLSA v1.0 provenance predicate" >> $GITHUB_STEP_SUMMARY
          echo "- **Secret Scan**: Verification that no secrets were exposed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add Archivista GraphQL query examples
          echo "## Query Attestations in Archivista" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Use these GraphQL queries at https://archivista.testifysec.io/query" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Find attestations by image name" >> $GITHUB_STEP_SUMMARY
          echo '```graphql' >> $GITHUB_STEP_SUMMARY
          echo 'query {' >> $GITHUB_STEP_SUMMARY
          echo '  subjects(where: {' >> $GITHUB_STEP_SUMMARY
          echo '    nameContains: "witness-demo"' >> $GITHUB_STEP_SUMMARY
          echo '  }) {' >> $GITHUB_STEP_SUMMARY
          echo '    edges {' >> $GITHUB_STEP_SUMMARY
          echo '      node {' >> $GITHUB_STEP_SUMMARY
          echo '        name' >> $GITHUB_STEP_SUMMARY
          echo '        statement {' >> $GITHUB_STEP_SUMMARY
          echo '          predicate' >> $GITHUB_STEP_SUMMARY
          echo '          attestationCollections {' >> $GITHUB_STEP_SUMMARY
          echo '            name' >> $GITHUB_STEP_SUMMARY
          echo '          }' >> $GITHUB_STEP_SUMMARY
          echo '        }' >> $GITHUB_STEP_SUMMARY
          echo '      }' >> $GITHUB_STEP_SUMMARY
          echo '    }' >> $GITHUB_STEP_SUMMARY
          echo '  }' >> $GITHUB_STEP_SUMMARY
          echo '}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Get recent DSSE envelopes with attestations" >> $GITHUB_STEP_SUMMARY
          echo '```graphql' >> $GITHUB_STEP_SUMMARY
          echo 'query {' >> $GITHUB_STEP_SUMMARY
          echo '  dsses(first: 5) {' >> $GITHUB_STEP_SUMMARY
          echo '    edges {' >> $GITHUB_STEP_SUMMARY
          echo '      node {' >> $GITHUB_STEP_SUMMARY
          echo '        gitoidSha256' >> $GITHUB_STEP_SUMMARY
          echo '        payloadType' >> $GITHUB_STEP_SUMMARY
          echo '        statement {' >> $GITHUB_STEP_SUMMARY
          echo '          predicate' >> $GITHUB_STEP_SUMMARY
          echo '          subjects {' >> $GITHUB_STEP_SUMMARY
          echo '            edges {' >> $GITHUB_STEP_SUMMARY
          echo '              node {' >> $GITHUB_STEP_SUMMARY
          echo '                name' >> $GITHUB_STEP_SUMMARY
          echo '              }' >> $GITHUB_STEP_SUMMARY
          echo '            }' >> $GITHUB_STEP_SUMMARY
          echo '          }' >> $GITHUB_STEP_SUMMARY
          echo '        }' >> $GITHUB_STEP_SUMMARY
          echo '      }' >> $GITHUB_STEP_SUMMARY
          echo '    }' >> $GITHUB_STEP_SUMMARY
          echo '  }' >> $GITHUB_STEP_SUMMARY
          echo '}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Search by GitOID (after build completes)" >> $GITHUB_STEP_SUMMARY
          echo '```graphql' >> $GITHUB_STEP_SUMMARY
          echo 'query {' >> $GITHUB_STEP_SUMMARY
          echo '  dsses(where: {' >> $GITHUB_STEP_SUMMARY
          echo '    gitoidSha256: "<GITOID_FROM_BUILD>"' >> $GITHUB_STEP_SUMMARY
          echo '  }) {' >> $GITHUB_STEP_SUMMARY
          echo '    edges {' >> $GITHUB_STEP_SUMMARY
          echo '      node {' >> $GITHUB_STEP_SUMMARY
          echo '        gitoidSha256' >> $GITHUB_STEP_SUMMARY
          echo '        signatures {' >> $GITHUB_STEP_SUMMARY
          echo '          keyID' >> $GITHUB_STEP_SUMMARY
          echo '          signature' >> $GITHUB_STEP_SUMMARY
          echo '        }' >> $GITHUB_STEP_SUMMARY
          echo '        statement {' >> $GITHUB_STEP_SUMMARY
          echo '          attestationCollections {' >> $GITHUB_STEP_SUMMARY
          echo '            name' >> $GITHUB_STEP_SUMMARY
          echo '          }' >> $GITHUB_STEP_SUMMARY
          echo '        }' >> $GITHUB_STEP_SUMMARY
          echo '      }' >> $GITHUB_STEP_SUMMARY
          echo '    }' >> $GITHUB_STEP_SUMMARY
          echo '  }' >> $GITHUB_STEP_SUMMARY
          echo '}' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY